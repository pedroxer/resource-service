syntax="proto3";

package ResourceService;

option go_package = "github.com/pedroxer/resource-service/internal/proto_gen";


import "google/protobuf/timestamp.proto";

service ResourceService {
  // Методы для управления рабочими местами
  rpc GetWorkplaces(GetWorkplacesRequest) returns (GetWorkplacesResponse);
  rpc GetWorkplaceById(GetWorkplaceByIdRequest) returns (Workplace);
  rpc GetWorkplaceByUniqueTag(GetWorkplaceByUniqueTagRequest) returns (Workplace);
  rpc CreateWorkplace(CreateWorkplaceRequest) returns (Workplace);
  rpc UpdateWorkplace(UpdateWorkplaceRequest) returns (Workplace);
  rpc DeleteWorkplace(DeleteWorkplaceRequest) returns (DeleteWorkplaceResponse);


  // Методы для управления парковочными местами
  rpc GetParkingSpaces(GetParkingSpacesRequest) returns (GetParkingSpacesResponse);
  rpc GetParkingSpaceById(GetParkingSpaceByIdRequest) returns (ParkingSpace);
  rpc CreateParkingSpace(CreateParkingSpaceRequest) returns (ParkingSpace);
  rpc UpdateParkingSpace(UpdateParkingSpaceRequest) returns (ParkingSpace);
  rpc DeleteParkingSpace(DeleteParkingSpaceRequest) returns (DeleteParkingSpaceResponse);
  rpc CheckParkingSpaceAvailability(CheckParkingSpaceAvailabilityRequest) returns (ParkingSpaceAvailabilityResponse);

  // Методы для управления предметами
  rpc GetItems(GetItemsRequest) returns (GetItemsResponse);
  rpc GetItemById(GetItemByIdRequest) returns (Item);
  rpc CreateItem(CreateItemRequest) returns (Item);
  rpc UpdateItem(UpdateItemRequest) returns (Item);
  rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse);

  rpc AttachItemToWorkplace(AttachItemToWorkplaceRequest) returns (Item);
}

// Сообщения для рабочих мест
message Workplace {
  int64 id = 1;
  string address = 2;
  string zone = 3;
  int64 floor = 4;
  int64 number = 5;
  string type = 6;
  int64 capacity = 7;
  string description = 8;
  bool is_available = 9;
  string maintenance_status = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  repeated Item items = 13;
  string unique_tag = 14;
}

message GetWorkplacesRequest {
  string zone = 1;
  int64 floor = 2;
  string type = 3;
  int64 capacity = 4;
  bool is_available = 5;
  int64 page = 6;
}

message GetWorkplacesResponse {
  repeated Workplace workplaces = 1;
  int64 total_count = 2;
  int64 page = 3;
  int64 page_size = 4;
}

message GetWorkplaceByIdRequest {
  int64 id = 1;
}

message GetWorkplaceByUniqueTagRequest {
  string unique_tag = 1;
}
message CreateWorkplaceRequest {
  string address = 1;
  string zone = 2;
  int64 floor = 3;
  int64 number = 4;
  string type = 5;
  int64 capacity = 6;
  string description = 7;
  bool is_available = 8;
  string maintenance_status = 9;
}

message UpdateWorkplaceRequest {
  int64 id = 1;
  string address = 2;
  string zone = 3;
  int64 floor = 4;
  int64 number = 5;
  string type = 6;
  int64 capacity = 7;
  string description = 8;
  bool is_available = 9;
  string maintenance_status = 10;
}

message DeleteWorkplaceRequest {
  int64 id = 1;
}

message DeleteWorkplaceResponse {
  bool success = 1;
  string message = 2;
}


message TimeSlot {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  string reason = 3;
}

// Сообщения для парковочных мест
message ParkingSpace {
  int64 id = 1;
  int64 number = 2;
  string location = 3;
  string type = 4;
  bool is_available = 5;
  string description = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message GetParkingSpacesRequest {
  string location = 1;
  string type = 2;
  bool is_available = 3;
  int64 page = 4;
}

message GetParkingSpacesResponse {
  repeated ParkingSpace parking_spaces = 1;
  int64 total_count = 2;
  int64 page = 3;
  int64 page_size = 4;
}

message GetParkingSpaceByIdRequest {
  int64 id = 1;
}

message CreateParkingSpaceRequest {
  int64 number = 1;
  string location = 2;
  string type = 3;
  bool is_available = 4;
  string description = 5;
}

message UpdateParkingSpaceRequest {
  int64 id = 1;
  int64 number = 2;
  string location = 3;
  string type = 4;
  bool is_available = 5;
  string description = 6;
}

message DeleteParkingSpaceRequest {
  int64 id = 1;
}

message DeleteParkingSpaceResponse {
  bool success = 1;
  string message = 2;
}

message CheckParkingSpaceAvailabilityRequest {
  int64 id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
}

message ParkingSpaceAvailabilityResponse {
  bool is_available = 1;
  repeated TimeSlot unavailable_slots = 2;
}

// Сообщения для предметов
message Item {
  int64 id = 1;
  string type = 2;
  string name = 3;
  string condition = 4;
  int64 workplace_id = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message ItemCondition {
  int64 id = 1;
  string value = 2;
  string description = 3;
}

message GetItemsRequest {
  string type = 1;
  string name = 2;
  int64 condition_id = 3;
  int64 workplace_id = 4;
  int64 page = 5;
}

message GetItemsResponse {
  repeated Item items = 1;
  int64 total_count = 2;
  int64 page = 3;
  int64 page_size = 4;
}

message GetItemByIdRequest {
  int64 id = 1;
}

message CreateItemRequest {
  string type = 1;
  string name = 2;
  int64 condition_id = 3;
  int64 workplace_id = 4;
}

message UpdateItemRequest {
  int64 id = 1;
  string type = 2;
  string name = 3;
  int64 condition_id = 4;
  int64 workplace_id = 5;
}

message DeleteItemRequest {
  int64 id = 1;
}

message DeleteItemResponse {
  bool success = 1;
  string message = 2;
}

message AttachItemToWorkplaceRequest {
    int64 item_id = 1;
    int64 workplace_id = 2;
  }